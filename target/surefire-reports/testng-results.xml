<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="1" total="8" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="BDD Test Suite" duration-ms="9289" started-at="2020-04-11T14:06:16 IST" finished-at="2020-04-11T14:06:25 IST">
    <groups>
    </groups>
    <test name="ECMS GET" duration-ms="4258" started-at="2020-04-11T14:06:16 IST" finished-at="2020-04-11T14:06:20 IST">
      <class name="demotest.RestAPIautomation">
        <test-method status="PASS" signature="getTest()[pri:0, instance:demotest.RestAPIautomation@46d56d67]" name="getTest" duration-ms="3396" started-at="2020-04-11T14:06:16 IST" finished-at="2020-04-11T14:06:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTest -->
        <test-method status="PASS" signature="getTest1()[pri:0, instance:demotest.RestAPIautomation@46d56d67]" name="getTest1" duration-ms="824" started-at="2020-04-11T14:06:19 IST" finished-at="2020-04-11T14:06:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTest1 -->
      </class> <!-- demotest.RestAPIautomation -->
    </test> <!-- ECMS GET -->
    <test name="ECMS JSON" duration-ms="1936" started-at="2020-04-11T14:06:20 IST" finished-at="2020-04-11T14:06:22 IST">
      <class name="demotest.RestJSONValidation">
        <test-method status="PASS" signature="setData()[pri:0, instance:demotest.RestJSONValidation@77cd7a0]" name="setData" is-config="true" duration-ms="1" started-at="2020-04-11T14:06:20 IST" finished-at="2020-04-11T14:06:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setData -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:demotest.RestJSONValidation@77cd7a0]" name="checkStatusCode" duration-ms="1935" started-at="2020-04-11T14:06:20 IST" finished-at="2020-04-11T14:06:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
      </class> <!-- demotest.RestJSONValidation -->
    </test> <!-- ECMS JSON -->
    <test name="ECMS PUT" duration-ms="1238" started-at="2020-04-11T14:06:22 IST" finished-at="2020-04-11T14:06:23 IST">
      <class name="demotest.RestPut">
        <test-method status="PASS" signature="createPayLoad()[pri:0, instance:demotest.RestPut@57fffcd7]" name="createPayLoad" is-config="true" duration-ms="2" started-at="2020-04-11T14:06:22 IST" finished-at="2020-04-11T14:06:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPayLoad -->
        <test-method status="PASS" signature="putMethod()[pri:0, instance:demotest.RestPut@57fffcd7]" name="putMethod" duration-ms="1235" started-at="2020-04-11T14:06:22 IST" finished-at="2020-04-11T14:06:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putMethod -->
      </class> <!-- demotest.RestPut -->
    </test> <!-- ECMS PUT -->
    <test name="ECMS-RequestChaining" duration-ms="176" started-at="2020-04-11T14:06:24 IST" finished-at="2020-04-11T14:06:24 IST">
      <class name="demotest.RestRequestChainingPost">
        <test-method status="FAIL" signature="addAndRemove()[pri:0, instance:demotest.RestRequestChainingPost@4f7d0008]" name="addAndRemove" duration-ms="170" started-at="2020-04-11T14:06:24 IST" finished-at="2020-04-11T14:06:24 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:237)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at demotest.RestRequestChainingPost.addAndRemove(RestRequestChainingPost.java:32)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:41)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:443)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:67)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAndRemove -->
      </class> <!-- demotest.RestRequestChainingPost -->
    </test> <!-- ECMS-RequestChaining -->
    <test name="ECMS-POST" duration-ms="759" started-at="2020-04-11T14:06:24 IST" finished-at="2020-04-11T14:06:24 IST">
      <class name="demotest.RestPost">
        <test-method status="PASS" signature="createPayLoad()[pri:0, instance:demotest.RestPost@4cf777e8]" name="createPayLoad" is-config="true" duration-ms="1" started-at="2020-04-11T14:06:24 IST" finished-at="2020-04-11T14:06:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPayLoad -->
        <test-method status="PASS" signature="postRequestNew()[pri:0, instance:demotest.RestPost@4cf777e8]" name="postRequestNew" duration-ms="758" started-at="2020-04-11T14:06:24 IST" finished-at="2020-04-11T14:06:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postRequestNew -->
      </class> <!-- demotest.RestPost -->
    </test> <!-- ECMS-POST -->
    <test name="ECMS-JSON-POST" duration-ms="771" started-at="2020-04-11T14:06:24 IST" finished-at="2020-04-11T14:06:25 IST">
      <class name="demotest.RestPostJsonPath">
        <test-method status="PASS" signature="creatingPayload()[pri:0, instance:demotest.RestPostJsonPath@13805618]" name="creatingPayload" is-config="true" duration-ms="0" started-at="2020-04-11T14:06:24 IST" finished-at="2020-04-11T14:06:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatingPayload -->
        <test-method status="PASS" signature="postJSON()[pri:0, instance:demotest.RestPostJsonPath@13805618]" name="postJSON" duration-ms="769" started-at="2020-04-11T14:06:24 IST" finished-at="2020-04-11T14:06:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postJSON -->
      </class> <!-- demotest.RestPostJsonPath -->
    </test> <!-- ECMS-JSON-POST -->
  </suite> <!-- BDD Test Suite -->
</testng-results>
